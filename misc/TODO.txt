JSValue:

* remove JSValue::from(JsValue&)
* bool JSValue::operator==(const JSValue&)

JSObject:

* type checking for JSNativeObject

JSFunction:

* set function name
? template <class... Args>
  using JSNativeFunction = JSValue (*)(JSObject, Args...);
? template <std::size_t N>
  using JSNativeFunction = JSValue (*)(JSObject, std::array<JSValue, N> args);

JSCallback:

* this (javascript) object

General:

* Reflect ( Function('return Reflect;') )
* unit tests
